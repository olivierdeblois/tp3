/**
 * \file Cheque.cpp
 * \brief
 * \author etudiant
 * \date 2018-03-27
 */

#include "Cheque.h"



Cheque::Cheque(int p_noCompte, double p_tauxInteret, double p_solde, int p_nombreTransactions,
		double p_tauxInteretMinimum, const std::string& p_description): Compte(p_noCompte, p_tauxInteret, p_solde, p_description),
		 m_nombreTransactions(p_nombreTransactions), m_tauxInteretMinimum(p_tauxInteretMinimum) {
}

double Cheque::reqTauxInteretMinimum() const {
	return m_tauxInteretMinimum;
}

int Cheque::reqNombreTransactions() const {
	return m_nombreTransactions;
}

void Cheque::asgNombreTransactions(int p_nombreTransactions) {
	m_nombreTransactions = p_nombreTransactions;
}

double Cheque::calculerInteret() const {
	double interet;
	if (Compte.p_solde >= 0){
		interet = 0;
	}
	else{
		if (m_nombreTransactions >= 0 && m_nombreTransactions <= 10){
			interet = m_tauxInteretMinimum;
		}
		if (m_nombreTransactions >= 11 && m_nombreTransactions <= 25){
			interet = m_tauxInteret * 0.4 ;
		}
		if (m_nombreTransactions >= 26 && m_nombreTransactions <= 35){
			interet = m_tauxInteret * 0.8 ;
		}
		if (m_nombreTransactions >= 36){
			interet = m_tauxInteret ;
		}
	}
	return interet;
}

Cheque::~Cheque() {
}

std::string Cheque::reqCompteFormate() const {
	ostringstream os;
	os << "Compte Cheque" << endl;
	os << "numero: " << m_noCompte << endl;
	os << "Description: " << m_description << endl;
	os << "Date d'ouverture: " << util::Date() << endl;
	os << "Taux d'interet: " << m_tauxInteret << endl;
	os << "Solde: " << m_solde <<"$"<< endl;
	os << "nobre de transactions: " << m_solde <<"$"<< endl;
	os << "Taux d'interet minimum: " << m_solde <<"$"<< endl;
	os << "Interet: " << Cheque::calculerInteret()*m_solde*-1 << "$"<< endl;
	return os.str();
}

void Cheque::verifieInvariant() const {
}
